{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/modules/authentication/authenticate-router.module.ts","webpack:///./src/app/modules/authentication/authenticate.service.ts","webpack:///./src/app/modules/authentication/authentication.module.ts","webpack:///./src/app/modules/authentication/login/login.component.css","webpack:///./src/app/modules/authentication/login/login.component.html","webpack:///./src/app/modules/authentication/login/login.component.ts","webpack:///./src/app/modules/authentication/register/register.component.css","webpack:///./src/app/modules/authentication/register/register.component.html","webpack:///./src/app/modules/authentication/register/register.component.ts","webpack:///./src/app/modules/movie/components/container/container.component.css","webpack:///./src/app/modules/movie/components/container/container.component.html","webpack:///./src/app/modules/movie/components/container/container.component.ts","webpack:///./src/app/modules/movie/components/movie-dialog/movie-dialog.component.css","webpack:///./src/app/modules/movie/components/movie-dialog/movie-dialog.component.html","webpack:///./src/app/modules/movie/components/movie-dialog/movie-dialog.component.ts","webpack:///./src/app/modules/movie/components/search/search.component.css","webpack:///./src/app/modules/movie/components/search/search.component.html","webpack:///./src/app/modules/movie/components/search/search.component.ts","webpack:///./src/app/modules/movie/components/thumbnail/thumbnail.component.css","webpack:///./src/app/modules/movie/components/thumbnail/thumbnail.component.html","webpack:///./src/app/modules/movie/components/thumbnail/thumbnail.component.ts","webpack:///./src/app/modules/movie/components/tmdb-container/tmdb-container.component.css","webpack:///./src/app/modules/movie/components/tmdb-container/tmdb-container.component.ts","webpack:///./src/app/modules/movie/components/watchlist/watchlist.component.css","webpack:///./src/app/modules/movie/components/watchlist/watchlist.component.html","webpack:///./src/app/modules/movie/components/watchlist/watchlist.component.ts","webpack:///./src/app/modules/movie/interceptor.service.ts","webpack:///./src/app/modules/movie/movie-router.module.ts","webpack:///./src/app/modules/movie/movie.module.ts","webpack:///./src/app/modules/movie/movie.service.ts","webpack:///./src/app/modules/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <span>Movie Cruiser</span>\\n    <button mat-button [routerLink]=\\\"['/movies/popular']\\\"> Popular Movies</button>\\n    <button mat-button [routerLink]=\\\"['/movies/top_rated']\\\">Top-Rated Movies</button>\\n    <button mat-button [routerLink]=\\\"['/movies/watchlist']\\\">My WatchList</button>\\n    <button mat-button [routerLink]=\\\"['/movies/search']\\\">Search</button>\\n    <button mat-button (click)=\\\"logout()\\\">Logout</button>\\n\\n    </mat-toolbar>\\n    \\n    <router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n   templateUrl: './app.component.html',\n  //template: ``,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule,Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms'\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule,MatButtonModule,MatDialogModule,MatInputModule } from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { MovieModule } from './modules/movie/movie.module';\nimport { AuthenticationModule } from \"./modules/authentication/authentication.module\";\nimport { AuthGuardService } from './auth-guard.service';\n\n// import { LoginComponent } from './modules/authentication/login/login.component';\n// import { RegisterComponent } from './modules/authentication/register/register.component'\n\nconst appRoutes = [\n  // {\n  //   path: '',\n  //   redirectTo: 'movies',\n  //   pathMatch: 'full',\n  // }\n\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full',\n  }\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // LoginComponent,\n    // RegisterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MovieModule,\n    AuthenticationModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatInputModule,\n    FormsModule,\n  ],\n  providers: [AuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {AuthenticateService } from '../app/modules/authentication/authenticate.service';\nimport { CanActivate } from '@angular/router/src/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private route: Router, private authService: AuthenticateService) { }\n\n  canActivate (){\n    if (!this.authService.isTokenExpired()){\n       return true;\n    }\n\n    this.route.navigate(['/login']);\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst authRoutes: Routes = [{\n\n    path: '',\n    children: [{\n        path: '',\n        redirectTo: '/login',\n        pathMatch: 'full',\n    },\n    {\n        path: 'register',\n        component: RegisterComponent\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    }\n\n\n    ]\n\n\n}]\n\n\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(authRoutes),\n    ],\n    exports: [\n        RouterModule,\n    ]\n})\nexport class AuthenticateRouterModule {\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as jwt_decode from 'jwt-decode';\n\nexport const TOKEN_NAME:string =\"jwt_token\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n\n  springEndPoint:string;\n  token:string;\n\n\n  constructor(private httpClient:HttpClient) { \n      this.springEndPoint = \"http://localhost:8089/api/v1/userauthservice\"\n\n  }\n\n  registerUser(newUser){\n    const url = this.springEndPoint + \"/register\";\n    return this.httpClient.post(url,newUser,{responseType:\"text\"}) \n  }\n\n  loginUser(newUser){\n    const url = this.springEndPoint + \"/login\";\n    return this.httpClient.post(url,newUser) \n  }\n\n  setToken(token:string){\n    localStorage.setItem(TOKEN_NAME,token);\n  }\n\n  getToken (){\n    return localStorage.getItem(TOKEN_NAME);\n  }\n\n  deleteToken(){\n    return localStorage.removeItem(TOKEN_NAME);\n  }\n\n  getTokenExpirationDate(token:string): Date {\n    const decoded = jwt_decode(token);\n    if (decoded.exp === undefined) return null;\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n    return date;\n  }\n\n\n  isTokenExpired(token?: string) : boolean {\n    if (!token) token = this.getToken();\n    if(!token) return true;\n    const date = this.getTokenExpirationDate(token);\n    if (date === undefined || date === null ) return false;\n    return !(date.valueOf() > new Date().valueOf());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule, MatIcon, MatInputModule, MatButtonModule, MatIconModule, MatCardModule } from '@angular/material';\n\n\nimport { AuthenticateRouterModule } from './authenticate-router.module'\nimport { LoginComponent } from './login/login.component'\nimport { RegisterComponent } from './register/register.component'\nimport { AuthenticateService }  from './authenticate.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AuthenticateRouterModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule\n\n  ],\n  declarations: [LoginComponent, RegisterComponent],\n  providers : [\n    AuthenticateService\n  ],\n  exports : [LoginComponent, RegisterComponent]\n})\nexport class AuthenticationModule { }\n","module.exports = \".login-block {\\n    margin:auto;\\n    width:50%;\\n    padding: 10px;\\n    padding-top: 50px;\\n    display: flex;\\n    align-content: center;\\n    justify-content: center;\\n    flex-flow: column nowrap;\\n    align-items: center;\\n}\\n\\n.login-input-full-width {\\n    width: 100%;\\n}\\n\\nh3 {\\n    text-align: center\\n}\"","module.exports = \"<form class=\\\"login-form\\\" #loginform=\\\"ngForm\\\" (ngSubmit)=\\\"loginUser()\\\" [style.fontsize.px]=\\\"20\\\">\\n\\n  <div class=\\\"login-block\\\">\\n    <div class=\\\"row\\\">\\n      <h3>Login User</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n\\n      <mat-form-field class=\\\"login-input-full-width\\\">\\n        <input id=\\\"userId\\\" matInput placeholder=\\\"User Id\\\" [(ngModel)]=\\\"newUser.userId\\\" \\n        name=\\\"userId\\\" required minlength=\\\"10\\\" #userId=\\\"ngModel\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"login-input-full-width\\\">\\n        <input id=\\\"password\\\" matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"newUser.password\\\" name=\\\"password\\\" required minlength=\\\"10\\\"\\n          maxlength=\\\"5\\\" #userId=\\\"ngModel\\\">\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button class=\\\"login-user\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"loginUser()\\\">Login</button>\\n      <button class=\\\"register-button\\\" mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/register']\\\">Register</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../user';\nimport { AuthenticateService } from '../authenticate.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  newUser: User;\n\n  constructor(private authservice: AuthenticateService, private router: Router) { \n\n    this.newUser = new User();\n  }\n\n  ngOnInit() {\n  }\n\n  loginUser (){\n    this.authservice.loginUser(this.newUser).subscribe(data=>{\n      if (data['token']){\n        this.authservice.setToken(data['token']);\n        this.router.navigate(['/movies/popular']);\n      }\n    })\n  }\n\n}\n","module.exports = \".register-block {\\n    margin:auto;\\n    width:50%;\\n    padding: 10px;\\n    padding-top: 50px;\\n    display: flex;\\n    align-content: center;\\n    justify-content: center;\\n    flex-flow: column nowrap;\\n    align-items: center;\\n}\\n\\n.register-input-full-width {\\n    width: 100%;\\n}\\n\\nh3{\\n    text-align: center\\n}\"","module.exports = \"<form class=\\\"register-form\\\" #registerform=\\\"ngForm\\\" (ngSubmit)=\\\"registerUser()\\\" [style.fontsize.px]=\\\"20\\\">\\n\\n  <div class=\\\"register-block\\\">\\n    <div class=\\\"row\\\">\\n      <h3>Register User</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <mat-form-field class=\\\"register-input-full-width\\\">\\n        <input id=\\\"firstName\\\" matInput placeholder=\\\"First Name\\\" [(ngModel)]=\\\"newUser.firstName\\\" name=\\\"firstName\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"register-input-full-width\\\">\\n        <input id=\\\"lastName\\\" matInput placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"newUser.lastName\\\" name=\\\"lastName\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"register-input-full-width\\\">\\n        <input id=\\\"userId\\\" matInput placeholder=\\\"User Id\\\" [(ngModel)]=\\\"newUser.userId\\\" name=\\\"userId\\\" required minlength=\\\"10\\\" #userId=\\\"ngModel\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"register-input-full-width\\\">\\n        <input id=\\\"password\\\" matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"newUser.password\\\" name=\\\"password\\\" required minlength=\\\"10\\\" maxlength=\\\"5\\\"\\n          #userId=\\\"ngModel\\\">\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button class=\\\"register-user\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"registerUser()\\\">Register user</button>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"resetInput()\\\">Clear</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../user';\nimport { AuthenticateService } from '../authenticate.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  newUser: User;\n\n  constructor(private authService:AuthenticateService, private router:Router) { \n\n    this.newUser = new User();\n  }\n\n  ngOnInit() {\n  }\n\n  registerUser (){\n    this.authService.registerUser(this.newUser).subscribe((data)=>{\n      this.router.navigate(['/login']);\n    })\n  }\n}\n","module.exports = \".movieContainer {\\n    margin: auto;\\n    width : 90vw;\\n    display: flex;\\n    flex-wrap: wrap;\\n    flex-direction: column;\\n    height: 100vh;\\n    overflow-x: auto\\n    }\"","module.exports = \"<div class=\\\"movieContainer\\\">\\n  <movie-thumbnail *ngFor=\\\"let movie of movies\\\" [movie]=\\\"movie\\\" [useWatchListApi]=\\\"useWatchListApi\\\" \\n  (addMovie)='addToWatchList($event)' (deleteMovie)='deleteFromWatchList($event)'>\\n  </movie-thumbnail>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Movie } from '../../movie';\nimport { MovieService } from '../../movie.service';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'movie-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n  @Input()\n  movies: Array<Movie>;\n  @Input()\n  useWatchListApi: boolean;\n  \n  constructor(private movieService: MovieService,private snackBar: MatSnackBar){\n  }\n\n  ngOnInit() {\n    \n  }\n  addToWatchList(movie){\n    let message = `${movie.title}`+'Movie added to WatchList';\n    this.movieService.addMoviesToWatchList(movie).subscribe((movie) => {\n        this.snackBar.open(message,'',{\n          duration: 1000\n         });\n       });\n  }\n\n  deleteFromWatchList(movie){\n    let message = `${movie.title}` +'deleted from your watch list';\n\n    // for (var i=0;i<this.movies.length;i++){\n    //     if(this.movies[i].title === movie.title){\n    //       this.movies.splice(i,1);\n    //     }\n    // }\n    this.movieService.deleteFromWatchList(movie).subscribe((movie)=>{\n      this.snackBar.open(message,'',{\n        duration: 1000\n       });\n    });\n\n    const index = this.movies.indexOf(movie);\n    this.movies.splice(index,1);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<span>Update the comments for the movie {{data.obj.title}}</span>\\n<h4 mat-dialog-title>{{data.obj.title}}</h4>\\n\\n<div mat-dialog-content>\\n  <p>comments</p>\\n  <mat-form-field>\\n    <textarea matInput [(ngModel)] = \\\"comments\\\"></textarea>\\n\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n<button mat-button color=warn (click)=\\\"onNoClick()\\\">Cancel</button>\\n<button mat-button colpr=warn (click)=\\\"updateComments()\\\">Update</button>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Movie } from '../../movie'\nimport { MovieService } from '../../movie.service';\n\n@Component({\n  selector: 'movie-movie-dialog',\n  templateUrl: './movie-dialog.component.html',\n  styleUrls: ['./movie-dialog.component.css']\n})\nexport class MovieDialogComponent implements OnInit {\n\n  movie: Movie;\n  comments: string;\n  actionType: string;\n  constructor(public snackBar: MatSnackBar, public dialogRef: MatDialogRef<MovieDialogComponent>, \n    @Inject(MAT_DIALOG_DATA) public data: any, private movieService: MovieService) { \n\n      this.comments=data.obj.movieComments;\n      this.movie=data.obj;\n      this.actionType=data.actionType;\n\n    }\n\n  ngOnInit() {\n  }\n\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  updateComments(){\n    console.log(\"inside update comments\");\n    console.log(this.comments);\n    this.movie.comments = this.comments;\n    console.log(this.movie.comments);\n    this.dialogRef.close();\n    this.movieService.updateComments(this.movie).subscribe(movie=>{\n      this.snackBar.open(\"Movie Updated to WatchList successfully\",\"\",{\n        duration:2000,\n      });\n    })\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"flex-container\\\">\\n  <form class=\\\"example-form\\\">\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" #box (keyup.enter)=\\\"onEnter(box.value)\\\">\\n        <mat-placeholder>Search</mat-placeholder>\\n      </mat-form-field>\\n  </form>\\n</div>\\n<movie-container [movies]=\\\"movies\\\"></movie-container>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Movie } from '../../movie';\nimport { MovieService } from '../../movie.service';\n\n\n@Component({\n  selector: 'movie-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  movies: Array<Movie>;\n  constructor(private movieService: MovieService) { }\n\n  ngOnInit() {\n  }\n  onEnter(searchKey){\n      this.movieService.searchMovies(searchKey).subscribe(movies=>{\n        this.movies = movies;\n      })\n  }\n\n}\n","module.exports = \".movie-thumbnail{\\n    width: 20vw;\\n}\\n\\n.movie-image{\\n    height: 25vw;\\n    width: 24vw;\\n}\\n\\n.movie-overview {\\n    height: 5vw;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n}\\n\\n.movie-overview::-webkit-scrollbar{\\n width: 0.15vw;\\n background: grey;   \\n}\\n\\n.movie-actions {\\n    text-align: right;  \\n}\"","module.exports = \"<mat-card class=\\\"movie-thumbnail\\\">\\n    <mat-card-header>\\n        <mat-card-title>{{movie?.title}}</mat-card-title>\\n        <mat-card-subtitle>{{movie?.release_date}}</mat-card-subtitle>\\n    </mat-card-header>\\n\\n    <img class=\\\"movie-image\\\" mat-card-image [src]=\\\"movie?.poster_path\\\" [alt]=\\\"movie?.name\\\">\\n    <mat-card-content class=\\\"movie-overview\\\">\\n        {{movie?.overview}}\\n    </mat-card-content>\\n    <mat-card-actions class=\\\"movie-actions\\\">\\n        <button *ngIf=\\\"!useWatchListApi\\\" mat-button (click)=\\\"addToWatchList()\\\" color=\\\"primary\\\">Add To WatchList</button>\\n        <button *ngIf=\\\"useWatchListApi\\\" mat-button (click)=\\\"deleteFromWatchList()\\\" color=\\\"primary\\\">Delete</button>\\n        <button *ngIf=\\\"useWatchListApi\\\" mat-button (click)=\\\"updateFromWatchList('update')\\\" color=\\\"primary\\\" align=\\\"end\\\">Update</button>\\n    </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit, Input, Output, EventEmitter,Inject } from '@angular/core';\nimport { Movie } from '../../movie';\n\nimport { MatDialog ,MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { MovieDialogComponent } from '../movie-dialog/movie-dialog.component';\n\n@Component({\n  selector: 'movie-thumbnail',\n  templateUrl: './thumbnail.component.html',\n  styleUrls: ['./thumbnail.component.css']\n})\nexport class ThumbnailComponent implements OnInit {\n\n  @Input()\n  useWatchListApi: boolean;\n  @Input()\n  movie: Movie;\n\n  @Output()\n  addMovie = new EventEmitter();\n\n  @Output()\n  deleteMovie = new EventEmitter();\n\n  \n\n\n  constructor(public dialog: MatDialog) {\n\n  }\n\n  ngOnInit() {}\n\n  addToWatchList() {\n    this.addMovie.emit(this.movie);\n  }\n  deleteFromWatchList(){\n    this.deleteMovie.emit(this.movie);\n  }\n  updateFromWatchList(actionType){\n    console.log(\"Movie is getting updated\");\n    \n    let dialogRef = this.dialog.open(MovieDialogComponent, {\n      width: '400px',\n      data: {obj: this.movie, actionType:actionType}\n    });\n    console.log(\"Open Dialogue\");\n\n    dialogRef.afterClosed().subscribe(result =>{\n      console.log(\"Dialogue is closed\");\n\n    });\n\n    //this.updateMovie.emit();\n\n  }\n\n}\n","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Movie } from '../../movie';\nimport { MovieService } from '../../movie.service';\n\n@Component({\n  selector: 'movie-tmdb-container',\n  //templateUrl: './tmdb-container.component.html',\n  template: `\n  <movie-container [movies]=\"movies\" ></movie-container>  \n  `,\n  styleUrls: ['./tmdb-container.component.css']\n})\nexport class TmdbContainerComponent implements OnInit {\n  movies: Array<Movie>;\n  movieType: string;\n\n  constructor(private movieService: MovieService, private route: ActivatedRoute) {\n    this.movies = [];\n    this.route.data.subscribe((data) => {\n      this.movieType = data.movieType;\n    });\n\n  }\n  ngOnInit() {\n    this.movieService.getMovies(this.movieType).subscribe((movies) => {\n      this.movies.push(...movies);\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<movie-container [movies]=\\\"movies\\\" [useWatchListApi]=\\\"useWatchListApi\\\"></movie-container>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Movie } from '../../movie';\nimport { MovieService } from '../../movie.service';\n\n\n@Component({\n  selector: 'movie-watchlist',\n  templateUrl: './watchlist.component.html',\n  styleUrls: ['./watchlist.component.css']\n})\nexport class WatchlistComponent implements OnInit {  \n  useWatchListApi: boolean;\n  movies: Array<Movie>;\n  \n  constructor(private movieService: MovieService) {\n    this.movies = [];\n    this.useWatchListApi = true;\n  }\n\n  ngOnInit() {\n    this.movieService.getWatchListedMovies().subscribe((movies) => {\n      this.movies.push(...movies);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AuthenticateService } from '../authentication/authenticate.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable()\nexport class InterceptorService implements HttpInterceptor {\n\n  constructor(private authService: AuthenticateService) {\n\n  }\n\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`\n      }\n    });\n\n    return next.handle(request);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ContainerComponent } from './components/container/container.component';\nimport { WatchlistComponent } from './components/watchlist/watchlist.component';\nimport { TmdbContainerComponent } from './components/tmdb-container/tmdb-container.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { AuthGuardService } from '../../auth-guard.service';\n\nconst movieRoutes: Routes = [\n    {\n        path: 'movies',\n        children: [\n            {\n                path: \"\",\n                redirectTo : '/movies/popular',\n                pathMatch: 'full',\n                canActivate: [AuthGuardService]\n            },\n            {\n                path: 'popular',\n                component: TmdbContainerComponent,\n                canActivate: [AuthGuardService],\n                data: {\n                    movieType: 'popular'\n                }\n            },\n            {\n                path: 'top_rated',\n                component: TmdbContainerComponent,\n                canActivate: [AuthGuardService],\n                data: {\n                    movieType: 'top_rated'\n                }\n            },\n            {\n               path: 'watchlist',\n               component: WatchlistComponent,\n               canActivate: [AuthGuardService],\n               data: {\n                movieType: 'watchList'\n               }\n\n            },\n            {\n                path: 'search',\n                component: SearchComponent,\n                canActivate: [AuthGuardService]\n            }\n        ]\n    }\n];\n\n@NgModule({\n   imports: [\n       RouterModule.forRoot(movieRoutes),\n   ],\n   exports:[\n       RouterModule,\n   ] \n})\nexport class MovieRouterModule{\n    \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatCardModule,MatButtonModule,MatSnackBarModule,MatInputModule,MatDialogModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\n\n\n\n\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { MovieService } from './movie.service';\nimport { ContainerComponent } from './components/container/container.component';\nimport { MovieRouterModule } from './movie-router.module';\nimport { WatchlistComponent } from './components/watchlist/watchlist.component';\nimport { TmdbContainerComponent } from './components/tmdb-container/tmdb-container.component';\nimport { MovieDialogComponent } from './components/movie-dialog/movie-dialog.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { InterceptorService } from './interceptor.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    MovieRouterModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatDialogModule,\n    FormsModule,\n   ],\n  declarations: [ThumbnailComponent, ContainerComponent, WatchlistComponent, TmdbContainerComponent, MovieDialogComponent, SearchComponent],\n  exports: [\n    MovieRouterModule,\n    ThumbnailComponent,\n    MovieDialogComponent,\n  ],\n  entryComponents: [MovieDialogComponent], \n  providers: [MovieService , {provide:HTTP_INTERCEPTORS, useClass: InterceptorService ,multi:true}]\n})\nexport class MovieModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators/map';\nimport {Observable} from 'rxjs/Rx';\n\nimport { Movie } from './movie';\n\n@Injectable()\nexport class MovieService {\n\n  apiKey: string;\n  movieDbEndPoint: string;\n  imagePrefix: string;\n  watchListEndPoint: string;\n  search: string;\n  constructor(private http: HttpClient) {\n    this.apiKey = 'api_key=c6e744d3142ba49dac3fafef987b7175';\n    this.movieDbEndPoint = 'https://api.themoviedb.org/3/movie';\n    this.imagePrefix = 'https://image.tmdb.org/t/p/w500'\n   // this.watchListEndPoint = 'http://localhost:3000/watchList'\n   this.watchListEndPoint = 'http://localhost:8082/api/v1/movieservice/movie'\n   this.search= 'https://api.themoviedb.org/3/search/movie?'\n\n  }\n\n\n  getMovies(type: string, page: number = 1): Observable<Array<Movie>> {\n    const endpoint = `${this.movieDbEndPoint}/${type}?${this.apiKey}&page=${page}`;\n    return this.http.get(endpoint).pipe(map(this.pickMovieResults),map(this.tranformPosterPath.bind(this))\n    );\n  }\n\n  tranformPosterPath(movies): Array<Movie> {\n    return movies.map(movie => {\n      movie.poster_path = `${this.imagePrefix}${movie.poster_path}`;\n      return movie;\n    });\n  }\n  addMoviesToWatchList(movie) {\n    return this.http.post(this.watchListEndPoint, movie);\n  }\n\n  getWatchListedMovies(): Observable<Array<Movie>> {\n    return this.http.get<Array<Movie>>(this.watchListEndPoint);\n  }\n  pickMovieResults(response) {\n    return response['results'];\n  }\n  deleteFromWatchList(movie:Movie){\n    const url = `${this.watchListEndPoint}/${movie.id}`;\n    return this.http.delete(url,{responseType:'text'});\n  }\n  updateComments(movie){\n    console.log(`${movie.comments}`);\n    const url = `${this.watchListEndPoint}/${movie.id}`;\n    return this.http.put(url,movie);\n  }\n  searchMovies(searchKey: string):Observable<Array<Movie>>{\n    if(searchKey.length>0){\n      const url = `${this.search}${this.apiKey}&language=en-US&page=1&include_adult=false&query=${searchKey}`;\n      console.log(url);\n      return this.http.get(url).pipe( map(this.pickMovieResults),map(this.tranformPosterPath.bind(this)));\n\n    }\n  }\n}\n","export class User {\n    firstName:string;\n    lastName:string;\n    userId:string;\n    password:string;\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}